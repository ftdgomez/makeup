/* 
container
grid
flex
querys
*/

$wSet: "container" 1024, "container-sm" 700, "container-lg" 1280,
  "container-xl" 1366;

@each $name, $w in $wSet {
  .#{$name} {
    max-width: #{$w}px;
    padding-left: 1rem;
    padding-right: 1rem;
    margin-left: auto;
    margin-right: auto;
  }
}

@for $i from 0 through 4 {
  .fgrid-#{$i} {
    display: grid;
    grid-template-columns: repeat(#{$i}, 1fr);
  }
}

@media screen and (min-width: 1024px) {
  // only pc
  @for $i from 0 through 4 {
    .grid-#{$i} {
      display: grid;
      grid-template-columns: repeat(#{$i}, 1fr);
    }
    .gap-#{$i} {
      column-gap: 0em + $i;
      grid-gap: 0em + $i;
    }
  }
}

@media screen and (max-width: 1024px) {
  // only mobile
  @for $i from 0 through 4 {
    .grid-#{$i} {
      display: block;
      grid-template-columns: 1fr;
    }
  }
}

// flex utils
.flex {
  display: flex;
}

.column {
  flex-direction: column;
}
.column-revese {
  flex-direction: column-reverse;
}

.align-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-end {
  justify-content: flex-end;
}
.justify-start {
  justify-content: flex-start;
}
.justify-evenly {
  justify-content: space-evenly;
}
.align-end {
  align-items: flex-end;
}
.align-start {
  align-items: flex-start;
}

@mixin all-to-center {
  flex-direction: column;
  display: flex;
  align-items: center;
  justify-content: center;
}

.all-to-center {
  @include all-to-center;
}

.d-block {
  display: block;
}

.d-inline-block {
  display: inline-block;
}
.d-none {
  display: none;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}
